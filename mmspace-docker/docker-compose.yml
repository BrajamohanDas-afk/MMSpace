version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: mmspace-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: mmspace
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
      - "27018:27017"
    networks:
      - mmspace-network

  # Backend Server
  server:
    build:
      context: ../server
      dockerfile: ../mmspace-docker/docker/server/Dockerfile
    container_name: mmspace-server
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=5000
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/mmspace?authSource=admin
      - JWT_SECRET=your_super_secret_jwt_key_change_this_in_production
      - CLIENT_URL=http://localhost:3000
    volumes:
      - ../server:/usr/src/app
      - /usr/src/app/node_modules
      - server_uploads:/usr/src/app/uploads
    ports:
      - "5000:5000"
    depends_on:
      - mongodb
    networks:
      - mmspace-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Client
  client:
    build:
      context: ../client
      dockerfile: ../mmspace-docker/docker/client/Dockerfile
      args:
        - VITE_API_URL=http://localhost:5000/api
        - VITE_SOCKET_URL=http://localhost:5000
    container_name: mmspace-client
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      - server
    networks:
      - mmspace-network

volumes:
  mongodb_data:
    driver: local
  server_uploads:
    driver: local

networks:
  mmspace-network:
    driver: bridge